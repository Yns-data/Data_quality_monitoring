services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  init:
    image: apache/airflow:2.10.3
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes:
      - ./scripts:/opt/airflow/scripts
      - ./noted-cider-471206-n4-6f7e8536f07f.json:/opt/airflow/noted-cider-471206-n4-6f7e8536f07f.json
    user: root
    command: >
      bash -c "apt-get update && apt-get install -y git ca-certificates &&
      su airflow -c 'git config --global http.sslverify false' &&
      su airflow -c 'pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org -r /opt/airflow/scripts/requirements.txt' &&
      su airflow -c 'airflow db migrate' &&
      su airflow -c 'airflow users create --username admin --firstname Air --lastname Flow --role Admin --email admin@admin.com --password admin'"

  webserver:
    image: apache/airflow:2.10.3
    depends_on:
      - init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: 'YOUR_FERNET_KEY'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      # Variables d'environnement pour les scripts de qualité des données
      user: ${user}
      password: ${password}
      host: ${host}
      port: ${port}
      dbname: ${dbname}
      tablename: ${tablename}
      key: /opt/airflow/noted-cider-471206-n4-6f7e8536f07f.json
      project_id: ${project_id}
      dataset_id: ${dataset_id}
      table_id: ${table_id}
      API_BASE_URL: ${API_BASE_URL}
      # Variables d'environnement pour dbt
      DBT_PROFILES_DIR: /opt/airflow/dbt
      DBT_PROJECT_DIR: /opt/airflow/dbt
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./scripts:/opt/airflow/scripts
      - ./dbt:/opt/airflow/dbt
      - ./noted-cider-471206-n4-6f7e8536f07f.json:/opt/airflow/noted-cider-471206-n4-6f7e8536f07f.json
    ports:
      - "8080:8080"
      - "8081:8081"
    # Configuration réseau pour accéder à l'host
    extra_hosts:
      - "host.docker.internal:host-gateway"
    user: root
    command: >
      bash -c "apt-get update && apt-get install -y git ca-certificates &&
      su airflow -c 'git config --global http.sslverify false' &&
      su airflow -c 'pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org -r /opt/airflow/scripts/requirements.txt' &&
      su airflow -c 'airflow webserver'"

  scheduler:
    image: apache/airflow:2.10.3
    depends_on:
      - init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      # Variables d'environnement pour les scripts de qualité des données
      user: ${user}
      password: ${password}
      host: ${host}
      port: ${port}
      dbname: ${dbname}
      tablename: ${tablename}
      key: /opt/airflow/noted-cider-471206-n4-6f7e8536f07f.json
      project_id: ${project_id}
      dataset_id: ${dataset_id}
      table_id: ${table_id}
      API_BASE_URL: ${API_BASE_URL}
      # Variables d'environnement pour dbt
      DBT_PROFILES_DIR: /opt/airflow/dbt
      DBT_PROJECT_DIR: /opt/airflow/dbt
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./scripts:/opt/airflow/scripts
      - ./dbt:/opt/airflow/dbt
      - ./noted-cider-471206-n4-6f7e8536f07f.json:/opt/airflow/noted-cider-471206-n4-6f7e8536f07f.json
    # Configuration réseau pour accéder à l'host
    extra_hosts:
      - "host.docker.internal:host-gateway"
    user: root
    command: >
      bash -c "apt-get update && apt-get install -y git ca-certificates &&
      su airflow -c 'git config --global http.sslverify false' &&
      su airflow -c 'pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org -r /opt/airflow/scripts/requirements.txt' &&
      su airflow -c 'airflow scheduler'"

volumes:
  postgres-db-volume:
